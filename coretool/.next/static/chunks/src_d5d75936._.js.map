{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///home/user/projects/tool_react/coretool/src/components/SideBarIcon.js"],"sourcesContent":["'use client'\nimport { useState,useEffect, useRef } from 'react';\nimport { Player } from '@lordicon/react';\nimport PropTypes from 'prop-types';\n\nexport default function SideBarIcon(props) {  \n  const ICON = require('assets/CartIcon.json'); \n  const playerRef = useRef(null); \n  \n    useEffect(() => {\n        playerRef.current?.playFromBeginning();\n    }, [])\n\n    return (\n        <Player \n            ref={playerRef} \n            icon={ ICON }\n            onComplete={() => {\n                playerRef.current?.playFromBeginning()\n            }}\n        />\n    );\n}\n\n\nSideBarIcon.propTypes = {\n    iconJsonName: PropTypes.string.isRequired\n};\n  "],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;;;AAHA;;;;AAKe,SAAS,YAAY,KAAK;;IACvC,MAAM;IACN,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,UAAU,OAAO,EAAE;QACvB;gCAAG,EAAE;IAEL,qBACI,6LAAC,wJAAA,CAAA,SAAM;QACH,KAAK;QACL,MAAO;QACP,YAAY;YACR,UAAU,OAAO,EAAE;QACvB;;;;;;AAGZ;GAjBwB;KAAA;AAoBxB,YAAY,SAAS,GAAG;IACpB,cAAc,yIAAA,CAAA,UAAS,CAAC,MAAM,CAAC,UAAU;AAC7C","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/projects/tool_react/coretool/src/components/SideBarIconDashboard.js"],"sourcesContent":["'use client'\nimport { useState,useEffect, useRef } from 'react';\nimport { Player } from '@lordicon/react';\nimport PropTypes from 'prop-types';\n\nexport default function SideBarIconDashboard(props) {  \n  const ICON = require('assets/AnalyticsIcon.json'); \n  const playerRef = useRef(null); \n  \n    useEffect(() => {\n        playerRef.current?.playFromBeginning();\n    }, [])\n\n    return (\n        <Player \n            ref={playerRef} \n            icon={ ICON }\n            onComplete={() => {\n                playerRef.current?.playFromBeginning()\n            }}\n        />\n    );\n}\n\n\nSideBarIconDashboard.propTypes = {\n    iconJsonName: PropTypes.string.isRequired\n};"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;;;AAHA;;;;AAKe,SAAS,qBAAqB,KAAK;;IAChD,MAAM;IACN,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACN,UAAU,OAAO,EAAE;QACvB;yCAAG,EAAE;IAEL,qBACI,6LAAC,wJAAA,CAAA,SAAM;QACH,KAAK;QACL,MAAO;QACP,YAAY;YACR,UAAU,OAAO,EAAE;QACvB;;;;;;AAGZ;GAjBwB;KAAA;AAoBxB,qBAAqB,SAAS,GAAG;IAC7B,cAAc,yIAAA,CAAA,UAAS,CAAC,MAAM,CAAC,UAAU;AAC7C","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/user/projects/tool_react/coretool/src/components/SideBarIconReport.js"],"sourcesContent":["'use client'\nimport { useState,useEffect, useRef } from 'react';\nimport { Player } from '@lordicon/react';\nimport PropTypes from 'prop-types';\n\nexport default function SideBarIconReport(props) {  \n  const ICON = require('assets/Assignment.json'); \n  const playerRef = useRef(null);     \n  \n    useEffect(() => {\n        playerRef.current?.playFromBeginning();\n    }, [])\n\n    return (\n        <Player \n            ref={playerRef} \n            icon={ ICON }\n            onComplete={() => {\n                playerRef.current?.playFromBeginning()\n            }}\n        />\n    );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;;;AAFA;;;;AAKe,SAAS,kBAAkB,KAAK;;IAC7C,MAAM;IACN,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACN,UAAU,OAAO,EAAE;QACvB;sCAAG,EAAE;IAEL,qBACI,6LAAC,wJAAA,CAAA,SAAM;QACH,KAAK;QACL,MAAO;QACP,YAAY;YACR,UAAU,OAAO,EAAE;QACvB;;;;;;AAGZ;GAjBwB;KAAA","debugId":null}}]
}